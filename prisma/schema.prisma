// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


// model User {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   email     String   @unique
//   name      String?
//   role      Role     @default(USER)
//   posts     Post[]
// }
model User {  
    id     String   @id @default(auto()) @map("_id") @db.ObjectId  
    email  String   @unique  
    name   String?  
    birthYear  Int?  
    createdAt  DateTime  @default(now())  
    updatedAt  DateTime  @updatedAt
}


model Article {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId 
  title       String   @unique
  description String?
  body        String
  published   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
model Message {  
    id     String   @id @default(auto()) @map("_id") @db.ObjectId 
    sender   String?
    message String 
    room    String 
    time  DateTime  @default(now())  
}
model Chat {  
    id     String   @id @default(auto()) @map("_id") @db.ObjectId 
    sender   String?
    message String 
    room    String 
    time  DateTime  @default(now())  
}


model Room {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId 
  name       String   @unique
}

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   published Boolean  @default(false)
//   title     String   @db.VarChar(255)
//   author    User?    @relation(fields: [authorId], references: [id])
//   authorId  Int?
// }

// model Article {
//   id          Int      @id @default(autoincrement())
//   title       String   @unique
//   description String?
//   body        String
//   published   Boolean  @default(false)
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
// }




// model Role {
//   id  Int   @id @default(autoincrement())
//   name String @db.VarChar(255)
// }

enum Role {
  USER
  ADMIN
}

